#sources for Jon Marcot's code and specimen measurements
source("~/Dropbox/code/R/common_src/strat.R")
source("~/Dropbox/code/R/common_src/occFns.R")
source("~/Dropbox/code/R/common_src/sampling.R")
source("~/Dropbox/code/R/common_src/utils_marcot.R")
source("~/Dropbox/code/R/common_src/CzTimescale.R")
source('~/Dropbox/code/R/dentalMeasurements/src/src_dentalDataFns.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_bodyMassEstimation.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_ecologyAnalysisFns.R', chdir = TRUE)
source('~/Dropbox/Code/R/dentalMeasurements/src/src_evanproposal.R')
####################################################################################################################################
occs <- read.csv("http://paleobiodb.org/data1.2/occs/list.csv?base_name=Mammalia&continent=NOA&max_ma=66&min_ma=0&timerule=overlap&show=full&limit=all", stringsAsFactors=TRUE, strip.white=TRUE)
#occs <- read.csv("/Users/emdoughty/Dropbox/Code/Occs_2021_9_5.csv")
occs <- occs[!occs$order %in% c("Cetacea", "Desmostylia", "Sirenia"), ]
occs <- occs[!occs$family %in% c("Allodelphinidae", "Allodesminae", "Balaenidae", "Balaenopteridae", "Delphinidae", "Desmatophocidae", "Desmostylidae",
"Didelphidae","Dugongidae","Enaliarctidae", "Eschrichtiidae","Iniidae", "Kentriodontidae", "Kogiidae",
"Odobenidae", "Otariidae", "Paleoparadoxiidae", "Phocidae", "Physeteridae", "Platanistidae", "Pontoporiidae",
"Protocetidae", "Squalodontidae", "Ziphiidae"), ]
occs <- occs[!occs$genus %in% c("Enaliarctos", "Pteronarctos", "Kolponomos", "Pacificotaria", "Pinnarctidion", "Pteronarctos"), ]
occs <- occs[!occs$accepted_name %in% c("Archaeoceti", "Pinnipedia", "Imagotariinae"), ]
occs$accepted_name <- gsub(pattern = "[[:space:]]", replacement = "_", x = occs$accepted_name)	#replace spaces with underscores
#remove duplicate taxa occurrences within same collection; this happens when synonyms
if(this.rank %in% names(occs)) { occs <- occs[!(occs[,this.rank] != "" & duplicated(occs[,c("collection_no", this.rank)])),]
} else if (this.rank == "species") {
occs <- occs[!(occs$accepted_rank=="species" & duplicated(occs[,c("collection_no", "accepted_name")])),]
}
#sources for Jon Marcot's code and specimen measurements
source("~/Dropbox/code/R/common_src/strat.R")
source("~/Dropbox/code/R/common_src/occFns.R")
source("~/Dropbox/code/R/common_src/sampling.R")
source("~/Dropbox/code/R/common_src/utils_marcot.R")
source("~/Dropbox/code/R/common_src/CzTimescale.R")
source('~/Dropbox/code/R/dentalMeasurements/src/src_dentalDataFns.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_bodyMassEstimation.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_ecologyAnalysisFns.R', chdir = TRUE)
source('~/Dropbox/Code/R/dentalMeasurements/src/src_evanproposal.R')
####################################################################################################################################
occs <- read.csv("http://paleobiodb.org/data1.2/occs/list.csv?base_name=Mammalia&continent=NOA&max_ma=66&min_ma=0&timerule=overlap&show=full&limit=all", stringsAsFactors=TRUE, strip.white=TRUE)
#occs <- read.csv("/Users/emdoughty/Dropbox/Code/Occs_2021_9_5.csv")
occs <- occs[!occs$order %in% c("Cetacea", "Desmostylia", "Sirenia"), ]
occs <- occs[!occs$family %in% c("Allodelphinidae", "Allodesminae", "Balaenidae", "Balaenopteridae", "Delphinidae", "Desmatophocidae", "Desmostylidae",
"Didelphidae","Dugongidae","Enaliarctidae", "Eschrichtiidae","Iniidae", "Kentriodontidae", "Kogiidae",
"Odobenidae", "Otariidae", "Paleoparadoxiidae", "Phocidae", "Physeteridae", "Platanistidae", "Pontoporiidae",
"Protocetidae", "Squalodontidae", "Ziphiidae"), ]
occs <- occs[!occs$genus %in% c("Enaliarctos", "Pteronarctos", "Kolponomos", "Pacificotaria", "Pinnarctidion", "Pteronarctos"), ]
occs <- occs[!occs$accepted_name %in% c("Archaeoceti", "Pinnipedia", "Imagotariinae"), ]
occs$accepted_name <- gsub(pattern = "[[:space:]]", replacement = "_", x = occs$accepted_name)	#replace spaces with underscores
#remove duplicate taxa occurrences within same collection; this happens when synonyms
if(this.rank %in% names(occs)) { occs <- occs[!(occs[,this.rank] != "" & duplicated(occs[,c("collection_no", this.rank)])),]
} else if (this.rank == "species") {
occs <- occs[!(occs$accepted_rank=="species" & duplicated(occs[,c("collection_no", "accepted_name")])),]
}
this.rank <- "species" #"genus" "species"
#sources for Jon Marcot's code and specimen measurements
source("~/Dropbox/code/R/common_src/strat.R")
source("~/Dropbox/code/R/common_src/occFns.R")
source("~/Dropbox/code/R/common_src/sampling.R")
source("~/Dropbox/code/R/common_src/utils_marcot.R")
source("~/Dropbox/code/R/common_src/CzTimescale.R")
source('~/Dropbox/code/R/dentalMeasurements/src/src_dentalDataFns.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_bodyMassEstimation.R', chdir = TRUE)
source('~/Dropbox/code/R/dentalMeasurements/src/src_ecologyAnalysisFns.R', chdir = TRUE)
source('~/Dropbox/Code/R/dentalMeasurements/src/src_evanproposal.R')
####################################################################################################################################
################################################
#Settings
run.taxon <- "ungulates"
this.rank <- "species" #"genus" "species"
interval.type <- "bins" #"nalma" "bins
add.Janis2000 <- FALSE
add.probo <- FALSE
add.mesonychid <- FALSE
if (do.parallel) require(parallel)
#Settings
run.taxon <- "ungulates"
this.rank <- "species" #"genus" "species"
interval.type <- "bins" #"nalma" "bins
add.Janis2000 <- FALSE
add.probo <- FALSE
add.mesonychid <- FALSE
require(parallel)
#date.save <- paste0("Janis=", add.Janis2000,"_Probo=", add.probo,"_Mesonichid=",add.mesonychid,"_2022_7_15")
bmBreaks_herb <- c(-Inf, 0.69897, 1.39794, 2.176091, 2.69897, Inf) #Janis 2000  max(measure.mat$bodyMass, na.rm=TRUE)
#bmBreaks_herb <- c(-Inf, 1.057, 1.54, 2.0265, 2.5785, Inf ) #k = 5
#bmBreaks_herb <- c(-Inf, 0.844, 1.269, 1.6245, 2.05665, 2.5785, Inf ) #k = 6
bmBreaks_pred <- c(-Inf, 0, 0.845098, 1.322219, 2, Inf) #PPP categories
#bmBreaks_pred <- c(-Inf, 0.8565, Inf)#k = 2
#bmBreaks_pred <- c(-Inf, -0.3235, 0.2505, 0.77, 1.538, Inf) #k = 5
#bmBreaks_pred <- c(-Inf, -0.3235, 0.2505, 0.7235, 1.3205, 2.0895, Inf)#k = 6
#predator.size.cat  <- c(-Inf,0.845098,1.322219,2,Inf) #<7 kg as single category
pred.cat.name <- "allCateg" #"sub7kg"
#the primary location of where the output files will go.  Make sure this only includes the file destination as the rest of the filename is concatenated in its respective section.
save.pathname <- "~/Dropbox/Code/R/Results/"
#toggle so one can fire and forget without having to go back and forth hunting for each section individually
analysis.toggle <- c("bmHandley") #"taxHandley",
#if you want to load a repIntOccs or repIntTaxa from file put the pathname as this object.  otherwise keep as NUll to make a new repIntOccs and repIntTaxa using the settings below
repIntLoad <- NULL #"/Users/emdoughty/Dropbox/Code/R/Results/repIntMaster__this.rank=species_timebin=2Mabins_SampleStandardized=TRUE_Reps=10000Jonathans_MBP.lan##------ Fri Mar  4 21:58:08 2022 ------##.Rdata"
#NULL
#"/Users/emdoughty/Dropbox/Code/R/Results/repIntMaster__this.rank=species_timebin=nalma_SampleStandardized=TRUE_Reps=10000Jonathans_MBP.lan##------ Thu Mar  3 18:05:02 2022 ------##.Rdata"
#NULL
################################################
occs <- read.csv("http://paleobiodb.org/data1.2/occs/list.csv?base_name=Mammalia&continent=NOA&max_ma=66&min_ma=0&timerule=overlap&show=full&limit=all", stringsAsFactors=TRUE, strip.white=TRUE)
#occs <- read.csv("/Users/emdoughty/Dropbox/Code/Occs_2021_9_5.csv")
occs <- occs[!occs$order %in% c("Cetacea", "Desmostylia", "Sirenia"), ]
occs <- occs[!occs$family %in% c("Allodelphinidae", "Allodesminae", "Balaenidae", "Balaenopteridae", "Delphinidae", "Desmatophocidae", "Desmostylidae",
"Didelphidae","Dugongidae","Enaliarctidae", "Eschrichtiidae","Iniidae", "Kentriodontidae", "Kogiidae",
"Odobenidae", "Otariidae", "Paleoparadoxiidae", "Phocidae", "Physeteridae", "Platanistidae", "Pontoporiidae",
"Protocetidae", "Squalodontidae", "Ziphiidae"), ]
occs <- occs[!occs$genus %in% c("Enaliarctos", "Pteronarctos", "Kolponomos", "Pacificotaria", "Pinnarctidion", "Pteronarctos"), ]
occs <- occs[!occs$accepted_name %in% c("Archaeoceti", "Pinnipedia", "Imagotariinae"), ]
occs$accepted_name <- gsub(pattern = "[[:space:]]", replacement = "_", x = occs$accepted_name)	#replace spaces with underscores
#remove duplicate taxa occurrences within same collection; this happens when synonyms
if(this.rank %in% names(occs)) { occs <- occs[!(occs[,this.rank] != "" & duplicated(occs[,c("collection_no", this.rank)])),]
} else if (this.rank == "species") {
occs <- occs[!(occs$accepted_rank=="species" & duplicated(occs[,c("collection_no", "accepted_name")])),]
}
measure.mat <- getMeasureMatWithBodyMasses()
test.csv <- read.csv("/Users/emdoughty/Downloads/PBDB Paper Condylarthra.csv")
test.csv <- unique(test.csv)
write.csv(test.csv, "/Users/emdoughty/Downloads/PBDB Paper Condylarthra.csv")
test.csv <- read.csv("/Users/emdoughty/Downloads/PBDB Paper Condylarthra.csv")
test.csv <- unique(test.csv)
write.csv(test.csv, "/Users/emdoughty/Downloads/PBDB Paper Condylarthra.csv")
write.csv(test.csv, "/Users/emdoughty/Downloads/PBDB Paper Condylarthra.csv")
google.driveData <- read.csv("/Users/emdoughty/Downloads/ArchaicUngulate_UploadFile_GoogleDrive.csv")
dropboxData <- read.csv("/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_2021_4_29_dep.csv")
#compare columns
colnames(google.driveData)
colnames(dropboxData)
cbind(colnames(google.driveData),colnames(dropboxData))
colnames(colnames(google.driveData)!colnames(google.driveData) %in% colnames(dropboxData)]
colnames(colnames(google.driveData)[!colnames(google.driveData) %in% colnames(dropboxData)]
colnames(google.driveData)[!colnames(google.driveData) %in% colnames(dropboxData)]
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
google.driveData$Type <- NA
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
google.driveData$Type <-google.driveData$Date.Recorded <-  NA
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
google.driveData$Type <-google.driveData$Date.Recorded goggle.driveData$PBDB.Paper.ID <-  NA
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
google.driveData$Type <-google.driveData$Date.Recorded goggle.driveData$PBDB.Paper.ID <-  NA
google.driveData$Type <-google.driveData$Date.Recorded google.driveData$PBDB.Paper.ID <-  NA
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(dropboxData)
google.driveData$Type <-google.driveData$Date.Recorded <- google.driveData$PBDB.Paper.ID <-  NA
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)]
colnames(google.driveData)[colnames(google.driveData) %in% colnames(dropboxData)][,colnames(dropboxData)]
colnames(dropboxData)[1:70]
test <- colnames(dropboxData)[1:70]
colnames(google.driveData)[colnames(google.driveData) %in% test]
colnames(google.driveData)[!colnames(google.driveData) %in% test]
colnames(dropboxData)[test %in% colnames(google.driveData)]
colnames(dropboxData)[!test %in% colnames(google.driveData)]
google.driveData <- read.csv("/Users/emdoughty/Downloads/ArchaicUngulate_UploadFile_GoogleDrive.csv")
dropboxData <- read.csv("/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_2021_4_29_dep.csv")
google.driveData$Type <-google.driveData$Date.Recorded <- google.driveData$PBDB.Paper.ID <-  NA
test <- colnames(dropboxData)[1:70]
colnames(google.driveData)[colnames(google.driveData) %in% test]
colnames(dropboxData)[!test %in% colnames(google.driveData)]
colnames(google.driveData)[colnames(google.driveData) %in% test][,colnames(dropboxData)]
google.driveData[,colnames(google.driveData) %in% test]
google.redux <- google.driveData[,colnames(google.driveData) %in% test]
google.driveData <- google.driveData[,colnames(google.driveData) %in% test]
google.driveData <- google.driveData[,test]
google.driveData
dropboxData <- dropboxData[,test]
#go through google.driveData to find rows that contain new data
dropboxData$Source[dropboxData$Source %in% google.driveData$Source]
#go through google.driveData to find rows that contain new data
dropboxData$Source[!dropboxData$Source %in% google.driveData$Source]
google.driveData$Source[!google.driveData$Source %in% dropboxData$Source]
google.driveData <- read.csv("/Users/emdoughty/Downloads/ArchaicUngulate_UploadFile_GoogleDrive.csv")
dropboxData <- read.csv("/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_2021_4_29_dep.csv")
#compare columns
colnames(google.driveData)
google.driveData$Type <-google.driveData$Date.Recorded <- google.driveData$PBDB.Paper.ID <-  NA
test <- colnames(dropboxData)[1:70]
google.driveData <- google.driveData[,colnames(google.driveData) %in% test]
google.driveData <- google.driveData[,test]
dropboxData <- dropboxData[,test]
#go through google.driveData to find rows that contain new data
dropboxData$Source[!dropboxData$Source %in% google.driveData$Source]
google.driveData$Source[!google.driveData$Source %in% dropboxData$Source]
#could jsut rbind then perform unique()
test.output <- rbind(dropboxData, google.driveData)
write.csv(test.output, "/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_test.csv")
#could jsut rbind then perform unique()
test.output <- unique(rbind(dropboxData, google.driveData))
write.csv(test.output, "/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_test.csv")
attributes(test.output)
duplicated(test.output[,1:61])
duplicated(test.output[,1:61])
test.ouput[duplicated(test.output[,1:61])]
test.ouput[duplicated(test.output[,1:61]),]
#could jsut rbind then perform unique()
test.output <- unique(rbind(dropboxData, google.driveData))
test.ouput[duplicated(test.output[,1:61]),]
test.output[duplicated(test.output[,1:61]),]
google.driveData <- read.csv("/Users/emdoughty/Downloads/ArchaicUngulate_UploadFile_GoogleDrive.csv")
dropboxData <- read.csv("/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_2021_4_29_dep.csv")
#compare columns
colnames(google.driveData)
google.driveData$Type <-google.driveData$Date.Recorded <- google.driveData$PBDB.Paper.ID <-  NA
test <- colnames(dropboxData)[1:70]
google.driveData <- google.driveData[,colnames(google.driveData) %in% test]
google.driveData <- google.driveData[,test]
dropboxData <- dropboxData[,test]
#go through google.driveData to find rows that contain new data
#by author
dropboxData$Source[!dropboxData$Source %in% google.driveData$Source]
google.driveData$Source[!google.driveData$Source %in% dropboxData$Source]
#could jsut rbind then perform unique()
test.output <- unique(rbind(dropboxData, google.driveData))
test.output[duplicated(test.output[,1:61]),]
#could jsut rbind then perform unique()
test.output <- unique(rbind(dropboxData, google.driveData)[,1:61])
write.csv(test.output, "/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_test.csv")
test.output <- google.driveData
write.csv(test.output, "/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/ArchaicUngulate_UploadFile_test.csv")
class(google.driveData)
test.output <- na.rm(google.driveData)
test.output <- as.dataframe(google.driveData, na.rm = TRUE)
test.output <- as.data.frame(google.driveData, na.rm = TRUE)
test.output
occs <- read.csv("http://paleobiodb.org/data1.2/occs/list.csv?base_name=Mammalia&continent=NOA&max_ma=66&min_ma=0&timerule=overlap&show=full&limit=all", stringsAsFactors=TRUE, strip.white=TRUE)
#occs <- read.csv("/Users/emdoughty/Dropbox/Code/Occs_2021_9_5.csv")
occs <- occs[!occs$order %in% c("Cetacea", "Desmostylia", "Sirenia"), ]
occs <- occs[!occs$family %in% c("Allodelphinidae", "Allodesminae", "Balaenidae", "Balaenopteridae", "Delphinidae", "Desmatophocidae", "Desmostylidae",
"Didelphidae","Dugongidae","Enaliarctidae", "Eschrichtiidae","Iniidae", "Kentriodontidae", "Kogiidae",
"Odobenidae", "Otariidae", "Paleoparadoxiidae", "Phocidae", "Physeteridae", "Platanistidae", "Pontoporiidae",
"Protocetidae", "Squalodontidae", "Ziphiidae"), ]
occs <- occs[!occs$genus %in% c("Enaliarctos", "Pteronarctos", "Kolponomos", "Pacificotaria", "Pinnarctidion", "Pteronarctos"), ]
occs <- occs[!occs$accepted_name %in% c("Archaeoceti", "Pinnipedia", "Imagotariinae"), ]
occs$accepted_name <- gsub(pattern = "[[:space:]]", replacement = "_", x = occs$accepted_name)	#replace spaces with underscores
update.names <- read.csv("/Users/emdoughty/Dropbox/Code/R/dentalMeasurements/dat/getCurrentNames.csv")
update.names
getCurrentTaxa
getMeasureMatWithBodyMasses
getSingleSpeciesMatrix
update.names$binomial_old <- paste(update.names$verbatim.genus,update.names$verbatim.species)
getCurrentTaxa(update.names$binomial_old)
update.names$binomial_new <- getCurrentTaxa(update.names$binomial_old)
update.names
library(stringr)
str_split_fixed(update.names$binomial_new, " ", 2)
